

// mencari tanggal-tanggal terjadinya pembelian tiket consert 2
      const concert2 = paymentList.filter((item:any) => item.IdKonser === 2)
      const concert2Payment = concert2.map((item:any) => {
        const convertToDate = new Date(item.createdAt)
        const toGmt = convertToDate.getMonth() +'/'+ convertToDate.getDate() + '/' + convertToDate.getFullYear().toString() + ' ' + 'GMT'
        return toGmt
      })

      // mencari jumlah tiket per tanggal transaksi concert 2
      const transactionDates2 = concert2.map((item:any) => item.createdAt) //masih ada duplicate
      const sortedTransactionDates2 = transactionDates2.sort((a:any,b:any) => Date.parse(a) - Date.parse(b))
      const setSortedTransactionDates2 = [...new Set(sortedTransactionDates2)]
      const totalDailyTransaction2 = []
      let count2 = 0
      for (let i = 0; i < setSortedTransactionDates2.length; i++) { 
        for (let j = 0; j < sortedTransactionDates2.length; j++) {
          if(setSortedTransactionDates2[i] === sortedTransactionDates2[j])
          count2++
        }
        totalDailyTransaction2.push(count2)
        count2 = 0
      } 

      // mencari tanggal-tanggal terjadinya pembelian tiket consert 3
      const concert3 = paymentList.filter((item:any) => item.IdKonser === 3)
      const concert3Payment = concert3.map((item:any) => {
        const convertToDate = new Date(item.createdAt)
        const toGmt = convertToDate.getMonth() +'/'+ convertToDate.getDate() + '/' + convertToDate.getFullYear().toString() + ' ' + 'GMT'
        return toGmt
      })

      // mencari jumlah tiket per tanggal transaksi concert 3
      const transactionDates3 = concert3.map((item:any) => item.createdAt) //masih ada duplicate
      const sortedTransactionDates3 = transactionDates3.sort((a:any,b:any) => Date.parse(a) - Date.parse(b))
      const setSortedTransactionDates3 = [...new Set(sortedTransactionDates3)]
      const totalDailyTransaction3 = []
      let count3 = 0
      for (let i = 0; i < setSortedTransactionDates3.length; i++) { 
        for (let j = 0; j < sortedTransactionDates3.length; j++) {
          if(setSortedTransactionDates3[i] === sortedTransactionDates3[j])
          count3++
        }
        totalDailyTransaction3.push(count3)
        count3 = 0
      } 

      // mencari tanggal-tanggal terjadinya pembelian tiket consert 4
      const concert4 = paymentList.filter((item:any) => item.IdKonser === 4)
      const concert4Payment = concert4.map((item:any) => {
        const convertToDate = new Date(item.createdAt)
        const toGmt = convertToDate.getMonth() +'/'+ convertToDate.getDate() + '/' + convertToDate.getFullYear().toString() + ' ' + 'GMT'
        return toGmt
      })

      // mencari jumlah tiket per tanggal transaksi concert 4
      const transactionDates4 = concert4.map((item:any) => item.createdAt) //masih ada duplicate
      const sortedTransactionDates4 = transactionDates4.sort((a:any,b:any) => Date.parse(a) - Date.parse(b))
      const setSortedTransactionDates4 = [...new Set(sortedTransactionDates4)]
      const totalDailyTransaction4 = []
      let count4 = 0
      for (let i = 0; i < setSortedTransactionDates4.length; i++) { 
        for (let j = 0; j < sortedTransactionDates4.length; j++) {
          if(setSortedTransactionDates4[i] === sortedTransactionDates4[j])
          count4++
        }
        totalDailyTransaction4.push(count4)
        count4 = 0
      } 

       // mencari tanggal-tanggal terjadinya pembelian tiket consert 5
       const concert5 = paymentList.filter((item:any) => item.IdKonser === 5)
       const concert5Payment = concert5.map((item:any) => {
         const convertToDate = new Date(item.createdAt)
         const toGmt = convertToDate.getMonth() +'/'+ convertToDate.getDate() + '/' + convertToDate.getFullYear().toString() + ' ' + 'GMT'
         return toGmt
       })
 
       // mencari jumlah tiket per tanggal transaksi concert 5
       const transactionDates5 = concert5.map((item:any) => item.createdAt) //masih ada duplicate
       const sortedTransactionDates5 = transactionDates5.sort((a:any,b:any) => Date.parse(a) - Date.parse(b))
       const setSortedTransactionDates5 = [...new Set(sortedTransactionDates5)]
       const totalDailyTransaction5 = []
       let count5 = 0
       for (let i = 0; i < setSortedTransactionDates5.length; i++) { 
         for (let j = 0; j < sortedTransactionDates5.length; j++) {
           if(setSortedTransactionDates5[i] === sortedTransactionDates5[j])
           count5++
         }
         totalDailyTransaction5.push(count5)
         count5 = 0
       } 